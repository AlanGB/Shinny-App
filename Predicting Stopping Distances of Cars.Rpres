Predicting Stopping Distances of Cars
========================================================
author: "Alán García Bernal"
date: 23/06/2019
autosize: true
transition: rotate

General Information
========================================================

The current Shiny Webb App uses the R dataset 'cars' (for more information on the data set  follow this link: https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/cars.html).

```{r cars summary}
summary(cars)
```

to create and plot 2 linear models with regression to the origin:
- Model A: lm(dist ~ speed -1, data = cars)
- Model B: lm(dist ~ speedsp + speed - 1, data = cars)

Inputs
========================================================

This App takes 3 different inputs:

- **Slider Input**: between 1 and 25 that determines the miles per hour used to predict the stopping distance.

- **Checkbox 1**: to determine if the Model A line will be visible.

- **Checkbox 2**: to determine if the Model B line will be visible.

Outputs
========================================================

- **Plot A**: a scatter plot with 'speed' in the x-axis and 'stopping distance' in the y-axis. It shows (if the user decides so) the lines for Models A and/or B and the difned point for making the predictions.

- **Predicted Stopping Distance for Model A**: the predicted stopping distance for the specified speed according to Model A (see example below).

```{r predA}
data(cars)
modelA <- lm(dist ~ speed - 1, data = cars)
predict(modelA, newdata = data.frame(speed = 20))
```

- **Predicted Stopping Distance for Model B**: the predicted stopping distance for the specified speed according to Model B (see example below).

```{r predB}
cars$speedsp <- ifelse(cars$speed - 19 > 0, cars$speed -19, 0)
modelB <- lm(dist ~ speedsp + speed - 1, data = cars)
predict(modelB, newdata = data.frame(speed = 19, speedsp = 0))
```

Plot
========================================================
This is an example of the plot produced by the App:

```{r plots, echo = FALSE, fig.pos = 'H'}
plot(cars$speed, cars$dist, xlab = "Car Speed",
             ylab = "Stopping Distance", bty = "n", pch = 16,
             xlim = c(0,25), ylim = c(0,120))
abline(modelA, col = "red", lwd = 2)

modelBlines <- predict(modelB, newdata = data.frame(
        speed = 1:25, speedsp = ifelse(1:25 - 19 > 0, 1:25 - 19, 0)))

lines(1:25, modelBlines, col = "blue", lwd = 2)

legend(1, 100, c("Model B Prediction", "Model B Prediction"), pch = 16,
               col = c("red","blue"), bty = "n", cex = 1.2)
points(19, predict(modelA, newdata = data.frame(speed = 19)), col = "red", pch = 16, cex = 2)
points(19, predict(modelB, newdata = data.frame(speed = 19, speedsp = 0)), col = "blue", pch = 16, cex = 2)
```
